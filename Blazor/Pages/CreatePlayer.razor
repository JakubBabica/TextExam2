@page "/CreatePlayer"
@using Domain.DTOs
@using Blazor.Services
@using Domain
@inject IPlayerService Service
@inject ITeamService TeamService
<h3>CreatePlayer</h3>
<div class="card">
    <div class="field">
        <label>Name</label>
        <input type="text"@bind="Name"/>
    </div>
    <div class="field">
        <label>Position</label>
        <input type="text"@bind="Position"/>
    </div>
    <div class="field">
        <label>ShirtNo</label>
        <input type="text"@bind="ShirtNo"/>
    </div>
    <div class="field">
        <label>Salary</label>
        <input type="text"@bind="Salary"/>
    </div>
    <div class="field">
        <label>Id</label>
        <input type="text"@bind="Id"/>
    </div>
    <div class="field">
        <label>GoalsThisSeason</label>
        <input type="text"@bind="GoalsThisSeason"/>
    </div>
    @if (teams == null)
    {
        <span>Loading..</span>
    }
    else if (!teams.Any())
    {
        <span>No teams to be found</span>
    }
    else
    {
        <div class="users-container">
            <select  class="form-control" @bind="@teamName" >
                    <option>-- Select entry --</option>
                    @foreach (Team team in teams)
                    {
                        <option class="card" value="@team.TeamName">
                            <p style="border: 1px solid; padding: 5px" >@team.TeamName </p>
                        </option>
                    }
                </select>
        </div>
    }  
</div>
<button @onclick="createTeam">add team</button>
@code {
    public string Name;
    public int ShirtNo;
    public decimal Salary;
    public int Id;
    public int GoalsThisSeason;
    public string Position;
    public string teamName;
    private string errorLabel;
    private IEnumerable<Team> teams;
    private async Task createTeam()
    {
        errorLabel = "";
        try
        {
            await Service.CreateAsync(new NewPlayerDTO(Name,ShirtNo,Salary,Id,GoalsThisSeason,Position,teamName));
            Name = "";
            ShirtNo = 0;
            Salary = 0;
            Id = 0;
            GoalsThisSeason = 0;
            Position = "";
            errorLabel = "";
            teamName = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    protected override async Task OnInitializedAsync()
    {
        errorLabel = "";
        try
        {
            teams = await TeamService.GetAll();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = e.Message;
        }
    }
}